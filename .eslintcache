[{"D:\\ReactJS\\lesson03\\src\\index.js":"1","D:\\ReactJS\\lesson03\\src\\App.js":"2","D:\\ReactJS\\lesson03\\src\\reportWebVitals.js":"3","D:\\ReactJS\\lesson03\\src\\components\\Product.js":"4","D:\\ReactJS\\Project2\\src\\index.js":"5","D:\\ReactJS\\Project2\\src\\App.js":"6","D:\\ReactJS\\Project2\\src\\reportWebVitals.js":"7","D:\\ReactJS\\Project2\\src\\components\\TaskForm.js":"8","D:\\ReactJS\\Project2\\src\\components\\TaskList.js":"9","D:\\ReactJS\\Project2\\src\\components\\Control.js":"10","D:\\ReactJS\\Project2\\src\\components\\TaskItem.js":"11","D:\\ReactJS\\Project2\\src\\components\\Search.js":"12","D:\\ReactJS\\Project2\\src\\components\\Sort.js":"13","D:\\ReactJS\\Redux\\src\\index.js":"14","D:\\ReactJS\\Redux\\src\\reportWebVitals.js":"15","D:\\ReactJS\\Redux\\src\\App.js":"16","D:\\ReactJS\\Redux\\src\\components\\TaskForm.js":"17","D:\\ReactJS\\Redux\\src\\components\\Control.js":"18","D:\\ReactJS\\Redux\\src\\components\\TaskList.js":"19","D:\\ReactJS\\Redux\\src\\components\\Search.js":"20","D:\\ReactJS\\Redux\\src\\components\\TaskItem.js":"21","D:\\ReactJS\\Redux\\src\\components\\Sort.js":"22","D:\\ReactJS\\Redux\\src\\reducers\\index.js":"23","D:\\ReactJS\\Redux\\src\\reducers\\tasks.js":"24","D:\\ReactJS\\Redux\\src\\constants\\ActionType.js":"25","D:\\ReactJS\\Redux\\src\\actions\\index.js":"26","D:\\ReactJS\\Redux\\src\\reducers\\isDisplayForm.js":"27"},{"size":507,"mtime":1611290866421,"results":"28","hashOfConfig":"29"},{"size":3217,"mtime":1611291340829,"results":"30","hashOfConfig":"29"},{"size":362,"mtime":499162500000,"results":"31","hashOfConfig":"29"},{"size":340,"mtime":1608957205589,"results":"32","hashOfConfig":"29"},{"size":512,"mtime":1612521414874,"results":"33","hashOfConfig":"34"},{"size":7544,"mtime":1614698546266,"results":"35","hashOfConfig":"34"},{"size":362,"mtime":499162500000,"results":"36","hashOfConfig":"34"},{"size":4059,"mtime":1612255835798,"results":"37","hashOfConfig":"34"},{"size":3043,"mtime":1612343357564,"results":"38","hashOfConfig":"34"},{"size":602,"mtime":1612431720472,"results":"39","hashOfConfig":"34"},{"size":1737,"mtime":1612170050719,"results":"40","hashOfConfig":"34"},{"size":1512,"mtime":1612364769437,"results":"41","hashOfConfig":"34"},{"size":3233,"mtime":1612432952748,"results":"42","hashOfConfig":"34"},{"size":807,"mtime":1615542107913,"results":"43","hashOfConfig":"44"},{"size":362,"mtime":499162500000,"results":"45","hashOfConfig":"44"},{"size":7308,"mtime":1615772844422,"results":"46","hashOfConfig":"44"},{"size":4647,"mtime":1615772689135,"results":"47","hashOfConfig":"44"},{"size":602,"mtime":1612431720472,"results":"48","hashOfConfig":"44"},{"size":3026,"mtime":1615772828782,"results":"49","hashOfConfig":"44"},{"size":1512,"mtime":1612364769437,"results":"50","hashOfConfig":"44"},{"size":2411,"mtime":1615773307521,"results":"51","hashOfConfig":"44"},{"size":3233,"mtime":1612432952748,"results":"52","hashOfConfig":"44"},{"size":233,"mtime":1615522945958,"results":"53","hashOfConfig":"44"},{"size":1713,"mtime":1615739724783,"results":"54","hashOfConfig":"44"},{"size":295,"mtime":1615738466880,"results":"55","hashOfConfig":"44"},{"size":669,"mtime":1615738525993,"results":"56","hashOfConfig":"44"},{"size":360,"mtime":1615772969358,"results":"57","hashOfConfig":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17eiel8",{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},"e10z9n",{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"69"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"89","usedDeprecatedRules":"90"},"3vf3e2",{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"90"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"90"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"D:\\ReactJS\\lesson03\\src\\index.js",[],"D:\\ReactJS\\lesson03\\src\\App.js",["118","119"],"D:\\ReactJS\\lesson03\\src\\reportWebVitals.js",[],["120","121"],"D:\\ReactJS\\lesson03\\src\\components\\Product.js",[],"D:\\ReactJS\\Project2\\src\\index.js",[],["122","123"],"D:\\ReactJS\\Project2\\src\\App.js",["124"],"D:\\ReactJS\\Project2\\src\\reportWebVitals.js",[],"D:\\ReactJS\\Project2\\src\\components\\TaskForm.js",[],"D:\\ReactJS\\Project2\\src\\components\\TaskList.js",[],"D:\\ReactJS\\Project2\\src\\components\\Control.js",[],"D:\\ReactJS\\Project2\\src\\components\\TaskItem.js",[],"D:\\ReactJS\\Project2\\src\\components\\Search.js",[],"D:\\ReactJS\\Project2\\src\\components\\Sort.js",["125","126","127","128"],"\r\nimport React, {Component} from 'react';\r\nclass Sort extends Component {\r\n\r\n\r\n    onSort = (sortBy, sortValue) => {\r\n\r\n        this.props.onSort(sortBy, sortValue);\r\n    }\r\n    render() {\r\n        \r\n    return (\r\n        <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\r\n            <div className=\"dropdown\">\r\n                <button \r\n                \r\n                    className =\"btn btn-primary dropdown-toggle\"\r\n                    type=\"button\" \r\n                    id=\"dropdownMenul\"\r\n                    data-toggle=\"dropdown\"\r\n                    aria-haspopup=\"true\"\r\n                    aria-expanded=\"true\"                    \r\n                >\r\n                    Sắp Xếp <span className=\"fa fa-caret-square-o-down ml-5\"></span>\r\n\r\n                </button>\r\n                <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\r\n                    <li onClick= { () => this.onSort('name', 1 ) }>\r\n                        <a role=\"button\"\r\n                            className = {(this.props.sortBy === 'name' && this.props.sortValue ===1) ? \r\n                                            'sort_selected' : ''\r\n                                        }\r\n                        > \r\n                            \r\n                            <span className=\"fa fa-sort-alpha-asc pr-5\">\r\n                                Tên A-Z\r\n                            </span>\r\n                        </a>\r\n                    </li>\r\n                    <li onClick={ () => this.onSort('name', -1) } >\r\n                        <a \r\n                            role=\"button\" \r\n                            className = {(this.props.sortBy === 'name' && this.props.sortValue === -1) ? \r\n                                            'sort_selected' : ''\r\n                                        }\r\n                        >\r\n                            <span className=\"fa fa-sort-alpha-desc pr-5\">\r\n                                Tên Z-A\r\n                            </span>\r\n                        </a>\r\n                    </li>\r\n                    <li role=\"separator\" className=\"divider\"></li>\r\n                    <li onClick={ () => this.onSort('status',1)}>\r\n                        <a \r\n                            role=\"button\" \r\n                            className = {(this.props.sortBy === 'status' && this.props.sortValue === 1) ? \r\n                                            'sort_selected' : ''\r\n                                        }\r\n                        >\r\n                            Trạng Thái Kích Hoạt\r\n                        </a>\r\n                    </li>\r\n                    <li onClick= { () => this.onSort('status', -1) }>\r\n                        <a \r\n                            role=\"button\" \r\n                            className = {(this.props.sortBy === 'status' && this.props.sortValue === -1) ? \r\n                                            'sort_selected' : ''\r\n                                        }\r\n                        >\r\n                            Trạng Thái Ẩn\r\n                        </a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n        \r\n\r\n      );\r\n   }\r\n}\r\n\r\n\r\nexport default Sort;\r\n","D:\\ReactJS\\Redux\\src\\index.js",["129"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// Store\n\nimport { createStore } from 'redux';\nimport myReducer from './reducers/index.js';\nimport { Provider } from 'react-redux';\nconst store = createStore(\n\tmyReducer,\n\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.\n\t__REDUX_DEVTOOLS_EXTENSION__()\n\n);\n\nReactDOM.render(\n  <React.StrictMode>\n  \t<Provider store={store}>\n    \t<App />\n    </Provider>,\n    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["130","131"],"D:\\ReactJS\\Redux\\src\\reportWebVitals.js",[],"D:\\ReactJS\\Redux\\src\\App.js",["132","133","134"],"import React, {Component} from 'react';\nimport './App.css';\nimport TaskForm from'./components/TaskForm';\nimport Control from './components/Control';\nimport TaskList from './components/TaskList';\nimport {findIndex, filter} from 'lodash';\nimport { connect } from 'react-redux';\nimport * as actions from './actions/index';\nclass App extends Component {\n    constructor(props) {\n      super(props);\n    \n      this.state = {\n        taskEditing : null,\n        filter : {\n            name : '',\n            status : -1\n        },\n        keyword : '',\n        itemEditing : null,\n        sortBy : 'name',\n        sortValue : 1\n      };\n    }\n   \n    onToggleForm = () => { \n        // if(this.state.isDisplayForm && this.state.taskEditing !== null){\n        //     this.setState({\n        //         isDisplayForm : true,\n        //         taskEditing : null\n        //     });\n        // }else{\n        //     this.setState({\n        //         isDisplayForm : !this.state.isDisplayForm,\n        //         taskEditing : null\n        //     });\n        // }  \n        this.props.onToggleForm();   \n    }\n    // onCloseForm = () => {\n    //     this.setState({\n    //         isDisplayForm : false\n    //     })\n    // }\n    onShowForm = () => {\n        this.setState({\n            isDisplayForm : true\n        })\n    }\n    // onSubmit = (data) => {\n    //     var {tasks} = this.state;\n    //     if(data.id ===''){\n    //         data.id = this.generateID();\n    //         tasks.push(data);\n    //     }else{\n    //         var index = this.findIndex(data.id);\n    //         tasks[index] = data;\n    //     }\n        \n    //     this.setState({\n    //         tasks : tasks,\n    //         taskEditing : null\n    //     });\n    //     localStorage.setItem('tasks',JSON.stringify(tasks));\n\n    // }\n    // onUpdateStatus = (id) => {\n    //     var {tasks} = this.state;\n    //     // var index = this.findIndex(id);\n    //     var index = findIndex(tasks, (task) => {\n    //         return task.id === id;\n    //     });\n    //     if(index !== -1){\n    //         tasks[index].status = !tasks[index].status;\n    //         this.setState({\n    //             tasks : tasks\n    //         });\n    //         localStorage.setItem('tasks',JSON.stringify(tasks));\n    //     }\n\n    // }\n    findIndex = (id) => {\n        var {tasks} = this.state;\n        var result = -1;\n        tasks.forEach((task,index) => {\n            if(task.id === id){\n                \n                result = index;\n            }\n        });\n        return result;\n    }\n    // onDelete = (id) => {\n    //     var {tasks} = this.state;\n    //     var index = this.findIndex(id);\n    //     if(index !== -1){\n    //         tasks.splice(index, 1);\n    //         this.setState({\n    //             tasks : tasks\n    //         });\n    //         localStorage.setItem('tasks',JSON.stringify(tasks));\n    //     }\n    //     this.onCloseForm();\n    // }\n    onUpdate = (id) =>{\n        var {tasks} = this.state;\n        var index = this.findIndex(id);\n        var taskEditing = tasks[index];\n        this.setState({\n            taskEditing : taskEditing\n        });\n        this.onShowForm();\n    }\n    onFilter = (filterName, filterStatus) => {\n        filterStatus = parseInt(filterStatus, 10);\n        this.setState({\n            filter : {\n                name : filterName.toLowerCase(),\n                status : filterStatus\n            }\n        });\n       \n    }\n    onSearch = (keyword) =>{\n        this.setState({\n            keyword : keyword\n        });\n    } \n    onSort = (sortBy, sortValue) => {      \n        this.setState({\n                sortBy : sortBy,\n                sortValue : sortValue\n\n        })\n    }\n    render() {\n        var {\n            \n             taskEditing,\n             filter,\n             // keyword,\n             sortBy,\n             sortValue\n             } = this.state; // var tasks = this.state.tasks\n        var {isDisplayForm} = this.props;\n        // if(filter){\n            // if(filter.name){\n            //    tasks = tasks.filter((task) => {\n            //         return task.name.toLowerCase().indexOf(filter.name) !== -1;\n            //     });\n\n\n              \n            // }\n            //     tasks = tasks.filter((task) => {\n            //         if(filter.status === -1){\n            //             return task;\n            //         }else{\n            //             return task.status ===(filter.status === 1 ? true : false)\n            //         }\n            //     });\n            \n        // }\n        // if(keyword){\n           // tasks = tasks.filter((task) => {\n           //          return task.name.toLowerCase().indexOf(keyword) !== -1;\n           //      });\n\n        //     tasks = filter(tasks, (task) => {\n        //             return task.name.toLowerCase().indexOf(keyword.toLowerCase())\n        //                     !== -1;\n        //        });\n        // }\n        // if(sortBy === 'name'){\n        //     tasks.sort((a,b) => {\n        //         if(a.name > b.name) return sortValue;\n        //         else if(a.name < b.name) return sortValue;\n        //         else return 0;\n        //     });\n        // }else{\n        //     tasks.sort((a,b) => {\n        //         if(a.status > b.status) return -sortValue;\n        //         else if(a.status < b.status) return sortValue;\n        //         else return 0;\n        //     });\n\n        // }\n        \n        return (\n            <div className=\"container\">\n                <div className=\"text-center\">\n                    <h1>Quản Lý Công Việc</h1><hr/>\n                </div>\n                <div className=\"row mt-15\">\n                    <div className={isDisplayForm ? 'col-xs-4 col-sm-4 col-md-4 col-lg-4'\n                                    :''}>\n                        {/*Form*/}\n                        {<TaskForm task = {taskEditing} /> }\n\n                    </div>\n                    <div className={isDisplayForm ? 'col-xs-8 col-sm-8 col-md-8 col-lg-8'\n                                    :'col-xs-12 col-sm-12 col-md-12 col-lg-12'\n                    }>\n                        <button type=\"button\"\n                                className=\"btn btn-primary\"\n                                 onClick={ this.onToggleForm}\n                        >\n\n                            <span className=\"fa fa-plus mr-5\"></span>Thêm Công Việc\n                        </button>\n                        \n                        {/*Search - Sort*/}\n                        <Control \n                            onSearch={this.onSearch}\n                            onSort = {this.onSort}\n                            sortBy = {sortBy}\n                            sortValue = {sortValue}\n                        />\n                        {/*List*/}\n                        <TaskList\n                            onFilter={this.onFilter}\n                        />\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state =>{\n    return {\n        isDisplayForm : state.isDisplayForm\n    };\n}\nconst mapDispatchToProps = (dispatch, props) => {\n    return {\n        onToggleForm : () => {\n            dispatch(actions.toggleForm());\n        }\n    };\n}\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n","D:\\ReactJS\\Redux\\src\\components\\TaskForm.js",[],"D:\\ReactJS\\Redux\\src\\components\\Control.js",[],"D:\\ReactJS\\Redux\\src\\components\\TaskList.js",[],"D:\\ReactJS\\Redux\\src\\components\\Search.js",[],"D:\\ReactJS\\Redux\\src\\components\\TaskItem.js",[],"D:\\ReactJS\\Redux\\src\\components\\Sort.js",["135","136","137","138"],"D:\\ReactJS\\Redux\\src\\reducers\\index.js",[],"D:\\ReactJS\\Redux\\src\\reducers\\tasks.js",[],"D:\\ReactJS\\Redux\\src\\constants\\ActionType.js",[],"D:\\ReactJS\\Redux\\src\\actions\\index.js",[],"D:\\ReactJS\\Redux\\src\\reducers\\isDisplayForm.js",[],{"ruleId":"139","severity":1,"message":"140","line":1,"column":8,"nodeType":"141","messageId":"142","endLine":1,"endColumn":12},{"ruleId":"143","severity":1,"message":"144","line":57,"column":21,"nodeType":"145","endLine":57,"endColumn":49},{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"146","replacedBy":"150"},{"ruleId":"148","replacedBy":"151"},{"ruleId":"139","severity":1,"message":"152","line":6,"column":20,"nodeType":"141","messageId":"142","endLine":6,"endColumn":26},{"ruleId":"143","severity":1,"message":"144","line":29,"column":25,"nodeType":"145","endLine":33,"endColumn":26},{"ruleId":"143","severity":1,"message":"144","line":41,"column":25,"nodeType":"145","endLine":46,"endColumn":26},{"ruleId":"143","severity":1,"message":"144","line":54,"column":25,"nodeType":"145","endLine":59,"endColumn":26},{"ruleId":"143","severity":1,"message":"144","line":64,"column":25,"nodeType":"145","endLine":69,"endColumn":26},{"ruleId":"153","severity":1,"message":"154","line":14,"column":47,"nodeType":"155","messageId":"156","endLine":14,"endColumn":48,"fix":"157"},{"ruleId":"146","replacedBy":"158"},{"ruleId":"148","replacedBy":"159"},{"ruleId":"139","severity":1,"message":"160","line":6,"column":9,"nodeType":"141","messageId":"142","endLine":6,"endColumn":18},{"ruleId":"139","severity":1,"message":"152","line":6,"column":20,"nodeType":"141","messageId":"142","endLine":6,"endColumn":26},{"ruleId":"139","severity":1,"message":"161","line":140,"column":14,"nodeType":"141","messageId":"142","endLine":140,"endColumn":20},{"ruleId":"143","severity":1,"message":"144","line":29,"column":25,"nodeType":"145","endLine":33,"endColumn":26},{"ruleId":"143","severity":1,"message":"144","line":41,"column":25,"nodeType":"145","endLine":46,"endColumn":26},{"ruleId":"143","severity":1,"message":"144","line":54,"column":25,"nodeType":"145","endLine":59,"endColumn":26},{"ruleId":"143","severity":1,"message":"144","line":64,"column":25,"nodeType":"145","endLine":69,"endColumn":26},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["162"],"no-negated-in-lhs",["163"],["162"],["163"],"'filter' is defined but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"164","text":"165"},["162"],["163"],"'findIndex' is defined but never used.","'filter' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[375,378],"\n\t."]